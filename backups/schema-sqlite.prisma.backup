generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Baugruppentyp {
  id          String            @id @default(cuid())
  bezeichnung String
  factoryId   String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  baugruppen  Baugruppe[]
  factory     ReassemblyFactory @relation(fields: [factoryId], references: [id])
  produkte    Produkt[]         @relation("BaugruppentypToProdukt")

  @@unique([bezeichnung, factoryId])
}

model ReassemblyFactory {
  id                     String          @id @default(cuid())
  name                   String
  kapazit√§t             Int
  schichtmodell          String          @default("EINSCHICHT")
  anzahlMontagestationen Int             @default(10)
  targetBatchAverage     Int             @default(65)
  pflichtUpgradeSchwelle Int             @default(30)
  beschaffung            Json?
  createdAt              DateTime        @default(now())
  updatedAt              DateTime        @updatedAt
  auftraege              Auftrag[]
  baugruppen             Baugruppe[]
  baugruppentypen        Baugruppentyp[]
  produkte               Produkt[]
}

model Kunde {
  id        String    @id @default(cuid())
  vorname   String
  nachname  String
  email     String?   @unique
  telefon   String?
  adresse   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  auftraege Auftrag[]
}

model Auftrag {
  id                  String              @id @default(cuid())
  kundeId             String
  produktvarianteId   String
  phase               String              @default("AUFTRAGSANNAHME")
  factoryId           String
  terminierung        Json?
  phaseHistory        Json?
  graphData           Json?
  processGraphDataBg  Json?
  processGraphDataBgt Json?
  processSequences    Json?
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  factory             ReassemblyFactory   @relation(fields: [factoryId], references: [id])
  produktvariante     Produktvariante     @relation(fields: [produktvarianteId], references: [id])
  kunde               Kunde               @relation(fields: [kundeId], references: [id])
  baugruppenInstances BaugruppeInstance[]
  liefertermine       Liefertermin[]
  stationDurations    StationDuration[]
}

model Liefertermin {
  id         String   @id @default(cuid())
  auftragId  String
  typ        String
  datum      DateTime
  istAktuell Boolean  @default(true)
  bemerkung  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  auftrag    Auftrag  @relation(fields: [auftragId], references: [id])
}

model Produkt {
  id               String             @id @default(cuid())
  bezeichnung      String
  seriennummer     String             @unique
  factoryId        String?
  graphData        Json?
  processGraphData Json?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  factory          ReassemblyFactory? @relation(fields: [factoryId], references: [id])
  varianten        Produktvariante[]
  baugruppentypen  Baugruppentyp[]    @relation("BaugruppentypToProdukt")
}

model Produktvariante {
  id          String    @id @default(cuid())
  produktId   String
  bezeichnung String
  typ         String
  glbFile     String?
  links       Json?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  auftraege   Auftrag[]
  produkt     Produkt   @relation(fields: [produktId], references: [id])
}

model Baugruppe {
  id                           String              @id @default(cuid())
  bezeichnung                  String
  artikelnummer                String              @unique
  variantenTyp                 String
  verfuegbar                   Int                 @default(0)
  factoryId                    String
  baugruppentypId              String?
  demontagezeit                Int?
  montagezeit                  Int?
  createdAt                    DateTime            @default(now())
  updatedAt                    DateTime            @updatedAt
  baugruppentyp                Baugruppentyp?      @relation(fields: [baugruppentypId], references: [id])
  factory                      ReassemblyFactory   @relation(fields: [factoryId], references: [id])
  austauschBaugruppenInstances BaugruppeInstance[] @relation("AustauschBaugruppe")
  originalBaugruppenInstances  BaugruppeInstance[] @relation("OriginalBaugruppe")
  prozesse                     Prozess[]           @relation("BaugruppeToProzess")
}

model BaugruppeInstance {
  id                   String     @id @default(cuid())
  baugruppeId          String
  austauschBaugruppeId String?
  auftragId            String
  zustand              Int
  reAssemblyTyp        String?
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  auftrag              Auftrag    @relation(fields: [auftragId], references: [id])
  austauschBaugruppe   Baugruppe? @relation("AustauschBaugruppe", fields: [austauschBaugruppeId], references: [id])
  baugruppe            Baugruppe  @relation("OriginalBaugruppe", fields: [baugruppeId], references: [id])
}

model Prozess {
  id         String      @id @default(cuid())
  name       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  baugruppen Baugruppe[] @relation("BaugruppeToProzess")
}

model ProductionStepTiming {
  id                    String    @id @default(cuid())
  orderId               String
  componentType         String
  stationId             String
  lineNumber            Int
  simulationTimeMinutes Int       @default(0)
  simulationStartTime   DateTime
  startTime             DateTime
  endTime               DateTime?
  durationMinutes       Int?
  stepType              String    @default("assembly")
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@index([orderId])
  @@index([stationId])
}

model DemontageTimings {
  id                    String    @id @default(cuid())
  orderId               String
  componentType         String
  stationId             String
  startTime             DateTime
  endTime               DateTime?
  durationMinutes       Int?
  simulationTimeMinutes Int       @default(0)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@index([orderId])
  @@index([stationId])
}

model AdvancedOrder {
  id                  String                @id @default(cuid())
  displayId           String?
  customerName        String
  productVariantName  String
  productVariantType  String
  currentPhase        String
  status              String                @default("active")
  deliveryDate        DateTime
  totalProcessingTime Int                   @default(0)
  completedAt         DateTime?
  reassemblyReason    String?
  requiresReassembly  Boolean               @default(false)
  assignedLineNumber  Int?
  needsQualityRework  Boolean               @default(false)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  components          AdvancedComponent[]
  processSteps        AdvancedProcessStep[]

  @@index([currentPhase])
  @@index([status])
}

model AdvancedProcessStep {
  id                     String        @id @default(cuid())
  orderId                String
  phase                  String
  startedAt              DateTime
  completedAt            DateTime?
  durationMinutes        Int?
  wasRework              Boolean       @default(false)
  disruptionOccurred     Boolean       @default(false)
  disruptionDelayMinutes Int           @default(0)
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
  order                  AdvancedOrder @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@index([orderId])
  @@index([phase])
}

model AdvancedComponent {
  id                     String        @id @default(cuid())
  orderId                String
  componentType          String
  conditionPercentage    Int
  reassemblyType         String?
  replacementComponentId String?
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
  order                  AdvancedOrder @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@index([orderId])
  @@index([componentType])
}

model StationDuration {
  id                  String    @id @default(cuid())
  auftragId           String
  stationId           String
  stationName         String
  stationType         String
  expectedDuration    Float
  actualDuration      Float?
  stochasticVariation Float     @default(0)
  startedAt           DateTime?
  completedAt         DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  auftrag             Auftrag   @relation(fields: [auftragId], references: [id], onDelete: Cascade)

  @@index([auftragId])
  @@index([stationId])
}
